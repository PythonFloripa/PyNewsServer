endpoints:
  - name: py_news_server
    path: http://localhost:8000/api
    vars:
      community_username: "username"
      community_password: "123Asd!@#"
    requests:
      - name: healthcheck
        path: healthcheck
        tests:
          - name: check
            assert: ${{ response.status_code == 200 and response.json()["status"] == "healthy" and response.json()["version"] == "2.0.0" }}
      - name: create_community
        path: authentication/create_community
        method: POST
        body:
          name: "Test Community"
      - name: login_for_access_token
        path: authentication/token
        method: POST
        headers:
          Content-Type: application/x-www-form-urlencoded
        body:
          username: ${community_username}
          password: ${community_password}
        tests:
          - name: try_login_for_access_token
            assert: ${{ response.status_code == 200 }}
        vars:
          access_token: ${{ response.json()["access_token"] }}
      - name: get_news_with_authentication
        path: news
        headers:
          Authorization: Bearer ${access_token}
          user-email: "teste@teste.com"
        tests:
          - name: try_get_with_authentication
            assert: ${{ response.status_code == 200 }}
      - name: get_news_without_authentication
        path: news
        tests:
          - name: try_get_without_authentication
            assert: ${{ response.status_code == 401 }}
      - name: create_news_with_authentication
        path: news
        method: POST
        headers:
          Authorization: Bearer ${access_token}
          user-email: "teste@teste.com"
        body:
          title: "Test News"
          content: "This is a test news article."
          category: "test_category"
          tags: "test_tag"
          source_url: "https://example.com/test-news"
          social_media_url: "https://example.com/testnews"
        tests:
          - name: try_create_news_with_authentication
            assert: ${{ response.status_code == 200 }}
      - name: create_news_without_authentication
        path: news
        method: POST
        body:
          title: "Test News"
          content: "This is a test news article."
          category: "test_category"
          tags: "test_tag"
          source_url: "https://example.com/test-news"
          social_media_url: "https://example.com/testnews"
        tests:
          - name: try_create_news_without_authentication
            assert: ${{ response.status_code == 401 }}
