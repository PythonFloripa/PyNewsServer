version: "3.8"

services:
  pynews-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: pynews-server
    ports:
      - "8000:8000"
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - sqlite_data:/app/data
    environment:
      - SQLITE_PATH=/app/data/pynewsdb.db
      - SQLITE_URL=sqlite+aiosqlite:////app/data/pynewsdb.db
    depends_on:
      - sqlite-init
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  sqlite-init:
    image: alpine:latest
    container_name: pynews-sqlite-init
    volumes:
      - sqlite_data:/data
    command: >
      sh -c "
        mkdir -p /data &&
        touch /data/pynewsdb.db &&
        chmod 777 /data &&
        chmod 666 /data/pynewsdb.db &&
        chown -R root:root /data &&
        echo 'SQLite database initialized'
      "
    restart: "no"

volumes:
  sqlite_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data

  scanapi-tests:
    build:
      context: .
      dockerfile: Dockerfile
      target: scanapi-test
    container_name: scanapi-tests
    env_file:
      - .env.test
    environment:
      - BASE_URL=http://pynews-server:8000
    volumes:
      - report-data:/server/scanapi
    depends_on:
      pynews-api:
        condition: service_healthy
    command: poetry run scanapi run

  scanapi-report-viewer:
    image: nginx:alpine
    container_name: scanapi-report-viewer
    ports:
      - "8080:80"
    volumes:
      - report-data:/usr/share/nginx/html:ro
    depends_on:
      - scanapi-tests

volumes:
  report-data:

networks:
  default:
    name: pynews-network
